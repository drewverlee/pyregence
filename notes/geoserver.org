* Configuring A GeoServer for Pyregence

** Installation Requirements

- [[http://geoserver.org/download/][GeoServer]]
- [[https://certbot.eff.org/][certbot]]
- [[https://www.openssl.org/source/][openssl]]

** Configuration

*** Allowing Cross-Origin Resource Sharing (CORS)

Open [GeoServer location]/webapps/geoserver/WEB-INF/web.xml for editing.
Uncomment the following 2 blocks:

#+begin_src sh
<!-- Uncomment following filter to enable CORS -->
<filter>
  <filter-name>cross-origin</filter-name>
#+end_src

#+begin_src sh
<!-- Uncomment following filter to enable CORS -->
<filter-mapping>
   <filter-name>cross-origin</filter-name>
#+end_src

In the first block listed above, restrict the cross origin domain by
editing the allowedOrigins param.

#+begin_src sh
<init-param>
    <param-name>allowedOrigins</param-name>
    <param-value>*pyregence.org*</param-value>
</init-param>
#+end_src

*** Enable SSL/HTTPS

**** Create Certificate

#+begin_src sh
sudo certbot certonly --quiet --non-interactive --agree-tos -m support@sig-gis.com --webroot -w ./resources/public -d data.pyregence.org
sudo openssl pkcs12 -export -out ./.key/keystore.pkcs12 -in /etc/letsencrypt/live/data.pyregence.org/fullchain.pem -inkey /etc/letsencrypt/live/data.pyregence.org/privkey.pem -passout pass:foobar
sudo chown geoserver keystore.pkcs12
#+end_src

**** Enable  in GeoServer
The GeoServer v2.16 seems to have mismatched versions of the required https and
ssl files. To correct this, download the Jetty distribution file that matches the
version used by GeoServer.

Copy the following files from the archive to the coresponding GeoServer directory

- $GEOSERVER_HOME/modules/ssl.mod
- $GEOSERVER_HOME/etc/jetty-https.xml
- $GEOSERVER_HOME/etc/jetty-ssl.xml
- $GEOSERVER_HOME/etc/jetty-ssl-context.xml

Edit jetty-ssl-context.xml to use the correct values for keystore location and
password.

Edit jetty-ssl.xml, and jetty.xml to update https port.

Add the following to $GEOSERVER_HOME/start.ini
#+begin_src sh
--module=ssl
--module=https
#+end_src
