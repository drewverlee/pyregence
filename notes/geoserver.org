* Configuring A GeoServer for Pyregence

** Installation Requirements

- [[http://geoserver.org/download/][GeoServer]]
- [[https://certbot.eff.org/][certbot]]
- [[https://www.openssl.org/source/][openssl]]

** Configuration

*** Allowing Cross-Origin Resource Sharing (CORS)

Open $GEOSERVER_HOME/webapps/geoserver/WEB-INF/web.xml for editing.
Uncomment the following 2 blocks:

#+begin_src xml
<!-- Uncomment following filter to enable CORS -->
<filter>
  <filter-name>cross-origin</filter-name>
#+end_src

#+begin_src xml
<!-- Uncomment following filter to enable CORS -->
<filter-mapping>
   <filter-name>cross-origin</filter-name>
#+end_src

In the first block listed above, restrict the cross origin domain by
editing the allowedOrigins param.

#+begin_src xml
<init-param>
    <param-name>allowedOrigins</param-name>
    <param-value>*pyregence.org*</param-value>
</init-param>
#+end_src

*** Enable SSL/HTTPS

Enabling HTTPS using this certbot method requires a web server like apahce2 to be running
for the verification process.

**** Create Certificate

Create shell script to create the keys after a rewnewal.  Add the following
to ~/.key/create-keys.sh

#+begin_src sh
openssl pkcs12 -export -out ~/.key/keystore.pkcs12 -in /etc/letsencrypt/live/data.pyregence.org/fullchain.pem -inkey /etc/letsencrypt/live/data.pyregence.org/privkey.pem -passout pass:foobar
## TODO, the file extensions created by certbot are different, but already might be in the correct form for Apache.
openssl pkcs12 -in ~/.key/keystore.pkcs12 -passin pass:foobar -nocerts -nodes -out domain.key
openssl pkcs12 -in ~/.key/keystore.pkcs12 -passin pass:foobar -clcerts -nokeys -out domain.cer
openssl pkcs12 -in ~/.key/keystore.pkcs12 -passin pass:foobar -nodes -nokeys -cacerts -out domain-ca.crt
#+end_src

Set the shell script as executable, initialize certbot, update permissions,
and add a symlink for the key folder in the geoserver folder

#+begin_src sh
sudo chown +x cerate-keys.sh
sudo certbot certonly --quiet --non-interactive --agree-tos -m support@sig-gis.com --webroot -w /var/www/html -d data.pyregence.org --deploy-hook ~/.key/create-keys.sh
sudo chown geoserver keystore.pkcs12
ln -s ~/.key/ ~/geoserver[version]/.key/
#+end_src

**** Enable in GeoServer

The GeoServer v2.16 seems to have mismatched versions of the required https and
ssl files. To correct this, download the Jetty distribution file that matches the
version used by GeoServer.

Copy the following files from the archive to the corresponding GeoServer directory

- $GEOSERVER_HOME/modules/ssl.mod
- $GEOSERVER_HOME/etc/jetty-https.xml
- $GEOSERVER_HOME/etc/jetty-ssl.xml
- $GEOSERVER_HOME/etc/jetty-ssl-context.xml
- $GEOSERVER_HOME/etc/jetty-ssl-context-reload.xml

Edit jetty-ssl-context.xml to use the correct values for keystore location and
password.

Edit jetty-ssl.xml and jetty.xml to update the https port.

Add the following to $GEOSERVER_HOME/start.ini

#+begin_example
--module=ssl
--module=ssl-reload
--module=https
#+end_example
